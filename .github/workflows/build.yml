name: Build

on:
  push:
    branches:
      - git-action-test
  pull_request:
permissions:
  contents: read
  pull-requests: read
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'calorieTrackerKey'
          fileDir: '/home/runner/work/CalorieTracker/CalorieTracker/app/keystore/release/'
          encodedString: ${{secrets.CALORIETRACKER_KEY}}

      - name: Check spotless
        run: ./gradlew spotlessCheck --init-script gradle/init.gradle.kts --no-configuration-cache

      - name: Check lint
        run: ./gradlew lintDemoDebug

      - name: Build all build type and flavor permutations
        run: ./gradlew assembleDebug

      - name: Run local tests
        run: ./gradlew testDemoDebug testProdDebug

      - name: Upload build outputs (APKs)
        uses: actions/upload-artifact@v3
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: app/build/reports

  androidTest:
    needs: build
    runs-on: macOS-latest # enables hardware acceleration in the virtual machine
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [26, 30]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'calorieTrackerKey'
          fileDir: '/home/runner/work/CalorieTracker/CalorieTracker/app/keystore/release/'
          encodedString: ${{secrets.CALORIETRACKER_KEY}}

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          disk-size: 6000M
          heap-size: 600M
          script: ./gradlew connectedDemoDebugAndroidTest -x :benchmark:connectedDemoBenchmarkAndroidTest

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ matrix.api-level }}
          path: '*/build/reports/androidTests'

  publish_aab:
    needs: [ build, androidTest ]
    if: github.base_ref == 'main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # JDK 설정
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          check-latest: true

      # Ruby Setting
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'calorieTrackerKey'
          fileDir: '/home/runner/work/CalorieTracker/CalorieTracker/app/keystore/release/'
          encodedString: ${{secrets.CALORIETRACKER_KEY}}

      - name: Set Secret Properties
        env:
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: echo "$LOCAL_PROPERTIES" > ./local.properties

      # Fastlane Setting
      - name: Set Up fastlane And Publish Google Play
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: 'productionDeploy'
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}